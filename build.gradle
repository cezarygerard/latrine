buildscript {
    ext {
        ver = [
                axionRelease: '1.4.1',
        ]
    }

    repositories {
        mavenCentral()
    }
    dependencies {
        // ASSUMES GRADLE 2.12 OR HIGHER. Use plugin version 0.7.5 with earlier
        // gradle versions  x
        classpath("pl.allegro.tech.build:axion-release-plugin:${ver.axionRelease}")
    }
}

description = """
The purpose is to easier documentation anything you would like flush with water and 
you're forced to live with it for a while.
"""

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'pl.allegro.tech.build.axion-release'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'idea'

scmVersion {
    tag {
        prefix = 'version'
        versionSeparator = '/'
    }
}

compileJava {
    options.fork = true
    options.incremental = true
    options.compilerArgs << '-parameters'
}

// Spock works with Java 1.5 and above
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8


task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    required {
        !scmVersion.version.endsWith("SNAPSHOT") && gradle.taskGraph.hasTask("uploadArchives")
    }
    sign configurations.archives
}

group = 'com.github.venth.tools'
archivesBaseName = rootProject.name
version = scmVersion.version

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(
                        userName: project.properties.get('ossrhUsername', ''),
                        password: project.properties.get('ossrhPassword', '')
                )
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(
                        userName: project.properties.get('ossrhUsername', ''),
                        password: project.properties.get('ossrhPassword', '')
                )
            }

            pom.project {
                name rootProject.name
                packaging 'jar'
                // optionally artifactId can be defined here
                description project.description

                scm {
                    connection 'scm:git:git://github.com/venth/latrine.git'
                    developerConnection 'scm:git:ssh://github.com/venth/latrine.git'
                    url 'https://github.com/venth/latrine'
                }

                licenses {
                    license {
                        name 'MIT License'
                        url 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }

                developers {
                    developer {
                        id 'venth'
                        name 'Artur Krysiak'
                        email 'artur.krysiak.warszawa@gmail.com'
                        organizationUrl 'https://github.com/venth'
                    }
                }
            }
        }
    }
}
